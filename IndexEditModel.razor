@page "/"
@using WrestlingSignUpBlazor;
@using WrestlingSignUpBlazor.Models;
@using WrestlingSignUpBlazor.Pages;
@using System.ComponentModel.DataAnnotations;

@inject WrestlerService wrestlerService

<h1>Set Youth Wrestling</h1>
<br>
<br>
Welcome to our Quick Sign-Up page.
<br>
<br>
<p>The Manhasset Youth Wrestling program was established to teach the fundamentals and techniques of scholastic <br>folkstyle wrestling. </p>  
<p>The core of the program is based upon building confidence, discipline and respect while having fun along the way <br>in a safe and supervised environment.</p>
<p>The benefits of youth wrestling include: kinesthetic awareness (balance and coordination), mental and physical <br>toughness (which will carry over to other sports), self-confidence, self defense, improved physical strength and <br>conditioning, and team building.</p>    
<p>The program is open to current Kindergarten through 5th grade students and is coached by Andrew Frangella, <br>Marcus Montiero, Chaz Trunz, JT Deignan, Matt Monoco, Dave Cielusniak & Bob Trieste.</p>
<p>The program typically runs from November 15th through February 1st with K-2nd graders practicing on Saturdays <br>from 9am - 10:30am. The 3rd-5th graders comprise a separate group and practice on Wednesdays from 7pm - 8:30pm <br>and Saturdays from 1pm - 2:30pm.</p> 
<p>With regards to the COVID-19 pandemic, we will continue to monitor developments from the state and follow school <br> administration guidlines. The safety of our student athletes is always the top priority.</p>
<p>We will send out any updates as we get them.</p> 
<p>In the meantime please feel free to check back or reach out to any of the <a class href="/Contact">coaches</a></p> 
<br> 
<h3>Returning wrestlers may sign-up below</h3><br> 

<EditForm Model="@sampleWrestler">
<DataAnnotationsValidator />
 
  <input placeholder="Wrestler First Name" @bind="@firstName" /><br />
  <ValidationMessage For="@(()=>firstName)" />
  
  <input placeholder="Wrestler Last Name" @bind="@lastName" /><br />
    <ValidationMessage For="@(()=>lastName)" />
  <input placeholder="Grade" @bind="@grade" /><br />
    <ValidationMessage For="@(()=>grade)" />
  <input placeholder="Parent Full Name" @bind="@parentName" /><br />
    <ValidationMessage For="@(()=>parentName)" />
  <input placeholder="Parent Email" @bind="@parentEmail" /><br />
    <ValidationMessage For="@(()=>parentEmail)" />
  <input placeholder="Parent Mobile (no dashes)" @bind="@parentMobile" /><br />
    <ValidationMessage For="@(()=>parentMobile)" />
  <button @onclick="@Insert" Text="Registration successful. Thank you." class="btn btn-success">Register</button>
 
  </EditForm>

  

<br>
<br>
<br>
<h3>New Registrants</h3>
<p>If you are registering with Manhasset Youth Wrestling for the first time please click below.<br> 
<a class="btn btn-warning"  href="https://setwrestling.com/registration">First-time Registrants</a></p>



@functions {
   
  List<Wrestler> wrestlers;
    string blazorID;

    string firstName;
    string lastName;
    string grade;
    string parentName;
    string parentEmail;

    string parentMobile;


    private enum MODE { None, Add, EditDelete };

  MODE mode = MODE.None;
  Wrestler wrestler;
 
protected void Add() { 
  ClearFields();
  mode = MODE.Add;
}

 
  private Wrestler sampleWrestler = new Wrestler();
    
    protected async override Task OnParametersSetAsync()
    {
        // simulate fetching for use on page
        await Task.Delay(500);
        sampleWrestler = new Wrestler() { FirstName = "Bob", LastName = "Trieste", Grade = "K", ParentName = "Bob Trieste", ParentEmail= "bobtrieste@gmail.com", ParentMobile = "9178066333" };
    }
 
protected async Task Insert() {

  Wrestler s = new Wrestler() {
    BlazorID = Guid.NewGuid().ToString(),
    FirstName = firstName,
    LastName = lastName,
    Grade = grade,
    ParentName = parentName,
    ParentEmail = parentEmail,
    ParentMobile = parentMobile

  };

mode = MODE.None;

  await wrestlerService.InsertWrestlerAsync(s);
  ClearFields();
  await load();
}
 
 
protected void ClearFields() {
  blazorID = string.Empty;
  firstName = string.Empty;
  lastName = string.Empty;
  grade = string.Empty;
  parentName = string.Empty;
  parentEmail = string.Empty;
  parentMobile = string.Empty;

  

}

  protected async Task load() {
    wrestlers = await wrestlerService.GetWrestlersAsync();
  }

  protected async Task Show(string id) {
  wrestler = await wrestlerService.GetWrestlerByIdAsync(id);
  blazorID = wrestler.BlazorID;
  firstName = wrestler.FirstName;
  lastName = wrestler.LastName;
  grade = wrestler.Grade;
  parentName = wrestler.ParentName;
  parentEmail = wrestler.ParentEmail;
  parentMobile = wrestler.ParentMobile;
  mode = MODE.EditDelete;
}


}
