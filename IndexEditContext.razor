@page "/"
@using WrestlingSignUpBlazor;
@using WrestlingSignUpBlazor.Models;

@using WrestlingSignUpBlazor.Pages;
@using System.ComponentModel.DataAnnotations;


@inject WrestlerService wrestlerService

<h1>Set Youth Wrestling</h1>
<br>
<br>
Welcome to our Quick Sign-Up page.
<br>
<br>
<p>The Manhasset Youth Wrestling program was established to teach the fundamentals and techniques of scholastic folkstyle wrestling. </p>  
<p>The core of the program is based upon building confidence, discipline and respect while having fun along the way in a safe and supervised environment.</p>
<p>The benefits of youth wrestling include: kinesthetic awareness (balance and coordination), mental and physical toughness (which will carry over to other sports), self-confidence, self defense, improved physical strength and conditioning, and team building.</p>    
<p>The program is open to current Kindergarten through 5th grade students and is coached by Andrew Frangella, Marcus Montiero, Chaz Trunz, JT Deignan, Matt Monoco, Dave Cielusniak & Bob Trieste.</p>
<p>The program typically runs from November 15th through February 1st with K-2nd graders practicing on Saturdays from 9am - 10:30am. The 3rd-5th graders comprise a separate group and practice on Wednesdays from 7pm - 8:30pm and Saturdays from 1pm - 2:30pm.</p> 
<p>With regards to the COVID-19 pandemic, we will continue to monitor developments from the state and follow school administration guidlines. The safety of our student athletes is always the top priority.</p>
<p>We will send out any updates as we get them.</p> 
<p>In the meantime please feel free to check back or reach out to any of the <a class href="/Contact">coaches</a></p> 
<br> 
<h3>Returning wrestlers may sign-up below</h3><br> 


 


 
<EditForm EditContext="@editContext" OnSubmit="@HandleSubmit"    >
 
<DataAnnotationsValidator />

  
    <div class="form-group">
        <div class="alert @StatusClass">@StatusMessage</div>
  <input placeholder="Wrestler First Name" @bind-value="@Wrestler.FirstName" /><br />
  <ValidationMessage For="@(()=>Wrestler.FirstName)" />
  <input placeholder="Wrestler Last Name" @bind-value="@Wrestler.LastName" /><br />
    <ValidationMessage For="@(()=>Wrestler.LastName)" />
  <input placeholder="Grade (K, 1, 2, etc)" @bind-value="@Wrestler.Grade" /><br />
    <ValidationMessage For="@(()=>Wrestler.Grade)" />
  <input placeholder="Parent Full Name" @bind-value="@Wrestler.ParentName" /><br />
    <ValidationMessage For="@(()=>Wrestler.ParentName)" />
  <input placeholder="Parent Email" @bind-value="@Wrestler.ParentEmail" /><br />
    <ValidationMessage For="@(()=>Wrestler.ParentEmail)" />
  <input placeholder="Parent Mobile (no dashes)" @bind-value="@Wrestler.ParentMobile" /><br />
    <ValidationMessage For="@(()=>Wrestler.ParentMobile)" />
      </div>
<button type="submit"  class="btn btn-success">Register</button> 


  </EditForm>


<br>
<br>
<br>
<h3>New Registrants</h3>
<p>If you are registering with Manhasset Youth Wrestling for the first time please click below.<br> 
<a class="btn btn-warning"  href="https://setwrestling.com/registration">First-time Registrants</a></p>


@code {
    private enum MODE { None, Add, EditDelete };

    MODE mode = MODE.None; 
    Wrestler Wrestler = new Wrestler(); 


     private EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(Wrestler);
        base.OnInitialized();
    }


  string StatusMessage;
  string StatusClass;
 

  protected void ClearFields() {
 
Wrestler.FirstName = string.Empty;
Wrestler.LastName = string.Empty;
Wrestler.Grade = string.Empty;
Wrestler.ParentName = string.Empty;
Wrestler.ParentEmail = string.Empty;
Wrestler.ParentMobile= string.Empty;

  }





    private async Task Insert()
    {

    Wrestler s = new Wrestler() {
    BlazorID = DateTime.Now.ToString(),
    FirstName = Wrestler.FirstName,
    LastName = Wrestler.LastName,
    Grade = Wrestler.Grade,
    ParentName = Wrestler.ParentName,
    ParentEmail = Wrestler.ParentEmail,
    ParentMobile = Wrestler.ParentMobile};


    mode = MODE.None;
 
     await wrestlerService.InsertWrestlerAsync(s);
     ClearFields();
     StatusClass = "alert-info";
     StatusMessage = DateTime.Now + " Thank you for Registering " + Wrestler.FirstName +"."; 

    mode = MODE.None;
  
       }
        
private void HandleSubmit(EditContext editContext)
    {
      if(editContext.Validate())
        {
             Insert();

        }
        else
        {
         StatusClass = "alert-danger";
         StatusMessage = DateTime.Now + " Please fix any errors or omissions. " ;
        }
    }
 
        

    }



   




 




      


        


         
            
 


 
 
    

 
     
  



  

